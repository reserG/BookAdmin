<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bookctrlcenter.dao.PrintersDao">

    <resultMap id="printersResultMap" type="Printerss">
        <id property="id" column="id"></id>
        <result property="printers" column="printers"></result>
        <result property="phone" column="phone"></result>
        <result property="totalPrice" column="totalPrice"></result>
        <result property="util.time1" column="time1"></result>
        <result property="util.time2" column="time2"></result>
        <result property="util.time3" column="time3"></result>
        <result property="util.time4" column="time4"></result>
        <result property="util.userID1" column="userID1"></result>
        <result property="util.userID2" column="userID2"></result>
        <result property="util.userID3" column="userID3"></result>
        <result property="util.userID4" column="userID4"></result>
        <result property="util.userName1" column="username"></result>
        <result property="util.status1" column="status1"></result>
        <result property="util.status2" column="status2"></result>
        <result property="util.status3" column="status3"></result>

    </resultMap>

    <resultMap id="bookResultMap" type="Book">
        <id property="id" column="id"></id>
        <result property="bookName" column="bookName"></result>
        <result property="author" column="author"></result>
        <result property="publisher" column="publisher"></result>
        <result property="isbn" column="isbn"></result>
        <result property="time" column="time"></result>
        <result property="price" column="price"></result>
        <result property="user.username" column="username"></result>
        <result property="user.departmentID" column="departmentID"></result>
        <result property="user.department" column="department"></result>
        <result property="userID" column="userID"></result>
        <result property="classSchedule.className" column="className"></result>
        <result property="classSchedule.classSchID" column="classSchID"></result>
        <result property="user.subject" column="subject"></result>
        <result property="count" column="count"></result>
        <result property="util.time1" column="time1"></result>
        <result property="util.time2" column="time2"></result>
        <result property="util.time3" column="time3"></result>
        <result property="util.time4" column="time4"></result>
        <result property="util.userID1" column="userID1"></result>
        <result property="util.userID2" column="userID2"></result>
        <result property="util.userID3" column="userID3"></result>
        <result property="util.userID4" column="userID4"></result>
        <result property="util.status1" column="status1"></result>
        <result property="util.status2" column="status2"></result>
        <result property="util.status3" column="status3"></result>
    </resultMap>


    <select id="getPriceFromSBDMForSM" parameterType="Printerss" resultType="Integer">
        select sum(price * count) totalPrice from schoolbookdemandlibrary where printersID =#{id}  and warehousing = 1;
    </select>

    <select id="listAll" parameterType="Printerss" resultMap="printersResultMap">
        select * from printersSM s left join user u on s.userID1 = u.id inner join printers sup on sup.id = s.id
        <where>
            <if test="printers!=null and printers!= ''">and sup.printers like "%"#{printers}"%"</if>
        </where>
    </select>

    <select id="listAllSUP" parameterType="Printerss" resultMap="printersResultMap">
        select * from printers
        <where>
            <if test="printers!=null and printers!= ''">and printers like "%"#{printers}"%"</if>
            <if test="phone!=null and phone!= ''">and phone like "%"#{phone}"%"</if>
        </where>
    </select>
    <select id="getDataCountSUP"  resultType="Integer" parameterType="Printerss">
        select count(1) from printers
        <where>
            <if test="printers!=null and printers!= ''">and printers like "%"#{printers}"%"</if>
            <if test="phone!=null and phone!= ''">and phone like "%"#{phone}"%"</if>
        </where>
    </select>

        <select id="getDataCount"  resultType="Integer" parameterType="Printerss">
            select count(1) from printersSM s inner join printers sup on sup.id = s.id
            <where>
                <if test="printers!=null and printers!= ''">and sup.printers like "%"#{printers}"%"</if>
            </where>
        </select>

    <select id="listAllM" parameterType="Printerss" resultMap="printersResultMap">
        select * from printersSM p left join user u on p.userID1 = u.id inner join printers sup on sup.id = p.id where status1 = 1
            <if test="printers!=null and printers!= ''">and printers like "%"#{printers}"%"</if>
    </select>

    <select id="getDataCountM"  resultType="Integer" parameterType="Printerss">
        select count(1) from printersSM where status1 = 1
            <if test="printers!=null and printers!= ''">and printers like "%"#{printers}"%"</if>
    </select>

    <update id="update" parameterType="Printerss">
        update printersSM set totalPrice = #{totalPrice} where id = #{id}
    </update>

    <update id="updateForSuperAdmin" parameterType="Printerss">
        update printersSM set status1 = #{util.status1},status3 = #{util.status1},time1 = #{util.time1},userID1 = #{util.userID1} where id = #{id}
    </update>

    <update id="updateForMoney" parameterType="Printerss">
        update printersSM set status2 = #{util.status2},time2 = #{util.time2},userID2 = #{util.userID2} where id = #{id}
    </update>

    <update id="updateForMoneyR" parameterType="Printerss">
        update printersSM set status3 = #{util.status3},status2 = 0,time2 = #{util.time2},userID2 = #{util.userID2} where id = #{id}
    </update>

    <update id="insert" parameterType="Printerss">
        insert into printersSM(id,totalPrice,status1,status3) values (#{id},#{totalPrice},0,1)on duplicate key update totalPrice = totalPrice + #{totalPrice};
    </update>
    <insert id="insertSUP" parameterType="Printerss">
        insert into printers(printers,phone) values (#{printers},#{phone})
    </insert>

<!--     <insert id="insert" parameterType="Suppliers">-->
<!--         insert into publisher(publisher) values (#{publisher})-->
<!--     </insert>-->

    <select id="IfExit" parameterType="Printerss" resultType="Integer">
        select count(id) from printers where printers = #{printers}
    </select>

<!--    <select id="listAllForSM" parameterType="User" resultMap="userResultMap">-->
<!--        select * from userRece ur inner join bookcenter bc on ur.isbn = bc.isbn inner join user u on u.id = ur.userID1 inner join department dp on dp.id = u.departmentID-->
<!--        <where>-->
<!--            <if test="username!=null and username !=''"> u.username like concat('%',#{username},'%')</if>-->
<!--            <if test="id!=null and id !=''"> u.id like concat('%',#{id},'%')</if>-->
<!--            <if test="department!=null and department !=''"> dp.department like concat('%',#{department},'%')</if>-->
<!--        </where>-->
<!--    </select>-->

<!--    <select id="listAllFromAdmin" parameterType="User" resultMap="bookResultMap">-->
<!--        select distinct * from userRece ur inner join bookcenter bc on ur.isbn = bc.isbn-->
<!--        inner join user u on u.id = ur.userID1 and u.departmentID = #{departmentID}-->
<!--        inner join classschedule cs on cs.userID = u.id group by ur.isbn,ur.userID1;-->
<!--    </select>-->

<!--    <select id="listAllFromSuperAdmin" parameterType="User" resultMap="bookResultMap">-->
<!--        select * from userRece ur inner join bookcenter bc on ur.isbn = bc.isbn inner join user u on u.id = ur.userID2 inner join department dp on dp.id = u.departmentID and ur.status1 = 1;-->
<!--    </select>-->

<!--    <insert id="insertForUser" parameterType="User">-->
<!--        insert into userRece(isbn,userID,time1) values (#{book.isbn},#{util.userID1},#{util.time1})-->
<!--    </insert>-->

<!--    <select id="getDataCount"  resultType="Integer" parameterType="User">-->
<!--        select count(1) from userRece ur inner join bookcenter bc on ur.isbn = bc.isbn and ur.userID1 =#{util.userID1}-->
<!--    </select>-->

<!--    <select id="getDataCountBySuperAdmin"  resultType="Integer" parameterType="User">-->
<!--        select count(1) from userRece ur inner join bookcenter bc on ur.isbn = bc.isbn and ur.status1 = 1-->
<!--    </select>-->

<!--    <select id="getDataCountByAdmin"  resultType="Integer" parameterType="User">-->
<!--              select count(1) from userRece ur inner join bookcenter bc on ur.isbn = bc.isbn  inner join user u on u.id = ur.userID1 and u.departmentID = #{departmentID};-->
<!--    </select>-->

<!--    <select id="getDataCountForSM"  resultType="Integer" parameterType="User">-->
<!--        select count(1) from userRece ur inner join bookcenter bc on ur.isbn = bc.isbn  inner join user u on u.id = ur.userID1 inner join department dp on dp.id = u.departmentID-->
<!--        <where>-->
<!--            <if test="username!=null and username !=''"> u.username like concat('%',#{username},'%')</if>-->
<!--            <if test="id!=null and id !=''"> u.id like concat('%',#{id},'%')</if>-->
<!--            <if test="department!=null and department !=''"> dp.department like concat('%',#{department},'%')</if>-->
<!--        </where>-->
<!--    </select>-->

<!--    <select id="getUserByUserID" parameterType="Integer" resultMap="userResultMap">-->
<!--        select * from user where id = #{id}-->
<!--    </select>-->

<!--    <update id="updateByAdmin" parameterType="User">-->
<!--   UPDATE userRece set-->
<!--        userID2= #{util.userID2} ,status1 = #{util.status1},time2 =#{util.time2}-->
<!--        where id = #{id}-->
<!--    </update>-->
<!--    <update id="updateByEditor" parameterType="User">-->

<!--    </update>-->
<!--    <update id="updateBySuperAdmin" parameterType="User">-->
<!--         UPDATE userRece set-->
<!--        userID3= #{util.userID3} ,status2 = #{util.status2},time3 =#{util.time3}-->
<!--        where id = #{id}-->
<!--    </update>-->

<!--    <update id="updateForSM" parameterType="User">-->
<!--         UPDATE userRece set-->
<!--        userID4= #{util.userID4} ,status3 = #{util.status3},time4 =#{util.time4}-->
<!--        where id = #{id}-->
<!--    </update>-->

</mapper>
